[[
   "start",
  ["comment","# single line comment"]
],[
   "comment",
  ["comment","/* multi-line"]
],[
   "comment",
  ["comment"," * comment"]
],[
   "start",
  ["comment"," */"]
],[
   "shexDoc"
],[
   ["comment.doc1","shexDoc"],
  ["comment.doc","/** doc comment"]
],[
   "shexDoc",
  ["comment.doc"," */"]
],[
   "shexDoc"
],[
   "shexDoc",
  ["keyword","PREFIX"],
  ["whiteSpace"," "],
  ["constant.library",":"],
  ["whiteSpace"," "],
  ["constant.language.TODO","<ij>"],
  ["whiteSpace"," "],
  ["keyword","PREFIX"],
  ["whiteSpace"," "],
  ["constant.library","a:"],
  ["whiteSpace"," "],
  ["constant.language.TODO","<kl>"]
],[
   "shexDoc",
  ["keyword","PREFIX"],
  ["whiteSpace"," "],
  ["constant.library","b:"],
  ["whiteSpace"," "],
  ["constant.language.TODO","<ab%3Acd"],
  ["constant.language.TODO.escape","\\u003A"],
  ["constant.language.TODO","ef"],
  ["constant.language.TODO.escape","\\U0000003A"],
  ["constant.language.TODO","gh>"]
],[
   "shexDoc",
  ["keyword","IMPORT"],
  ["whiteSpace"," "],
  ["constant.language.TODO","<mn>"]
],[
   "shexDoc",
  ["keyword","BASE"],
  ["whiteSpace"," "],
  ["constant.language.TODO","<op>"]
],[
   "shexDoc"
],[
   ["#tmp","tripleExpression","shape","nonLitNodeConstraintOpt","shapeNot","shexDoc"],
  ["whiteSpace"," "],
  ["constant.language.shapeExprLabel","<#S0%3A>"],
  ["whiteSpace"," "],
  ["lcurly","{"]
],[
   ["#tmp","tripleExpression","shape","nonLitNodeConstraintOpt","shapeNot","eachOneOpt","shape","nonLitNodeConstraintOpt","shapeNot","shexDoc"],
  ["whiteSpace","  "],
  ["constant.library.predicate","a.b:"],
  ["variable.predicate","p"],
  ["variable.predicate.escape","\\="],
  ["variable.predicate","1"],
  ["whiteSpace"," "],
  ["lcurly","{"]
],[
   ["#tmp","tripleExpression","shape","nonLitNodeConstraintOpt","shapeNot","eachOneOpt","shape","nonLitNodeConstraintOpt","shapeNot","eachOneOpt","shape","nonLitNodeConstraintOpt","shapeNot","shexDoc"],
  ["whiteSpace","    "],
  ["operator","$"],
  ["constant.library.tripleExprLabel","a:"],
  ["variable.tripleExprLabel","te1"],
  ["whiteSpace"," "],
  ["constant.language.predicate","<p>"],
  ["whiteSpace"," "],
  ["lcurly","{"]
],[
   ["#tmp","xsFacetStar","litNodeConstraint","andOrOpt","shapeNot","eachOneOpt","shape","nonLitNodeConstraintOpt","shapeNot","eachOneOpt","shape","nonLitNodeConstraintOpt","shapeNot","eachOneOpt","shape","nonLitNodeConstraintOpt","shapeNot","shexDoc"],
  ["whiteSpace","      "],
  ["constant.library.predicate","a:"],
  ["whiteSpace"," "],
  ["constant.library.datatype","xsd:"],
  ["variable.datatype","integer"],
  ["whiteSpace"," "],
  ["keyword","OR"],
  ["whiteSpace"," "],
  ["operator","["],
  ["constant","1"],
  ["whiteSpace"," "],
  ["constant","2"],
  ["operator","]"]
],[
   ["#tmp","nonLitNodeConstraintOpt","shapeNot","eachOneOpt","shape","nonLitNodeConstraintOpt","shapeNot","eachOneOpt","shape","nonLitNodeConstraintOpt","shapeNot","shexDoc"],
  ["whiteSpace","    "],
  ["rcurly","}"]
],[
   ["#tmp","orOpt","shape","nonLitNodeConstraintOpt","shapeNot","shexDoc"],
  ["whiteSpace","  "],
  ["rcurly","}"],
  ["whiteSpace"," "],
  ["operator",";"]
],[
   ["comment89","orOpt","shape","nonLitNodeConstraintOpt","shapeNot","shexDoc"],
  ["whiteSpace"," "],
  ["comment","/* }      A multi-line comment doesn't"]
],[
   ["comment89","orOpt","shape","nonLitNodeConstraintOpt","shapeNot","shexDoc"],
  ["comment","    }      close this shape,"]
],[
   ["#tmp","orOpt","shape","nonLitNodeConstraintOpt","shapeNot","shexDoc"],
  ["comment"," */"]
],[
   ["#tmp","orOpt","shape","nonLitNodeConstraintOpt","shapeNot","shexDoc"],
  ["whiteSpace","  "],
  ["comment","# }      nor does a single-line,"]
],[
   ["#tmp","xsFacetStar","litNodeConstraint","andOrOpt","shapeNot","eachOneOpt","shape","nonLitNodeConstraintOpt","shapeNot","shexDoc"],
  ["whiteSpace","  "],
  ["constant.library.predicate",":"],
  ["whiteSpace"," "],
  ["constant.library.datatype","a:"],
  ["variable.datatype","b"],
  ["whiteSpace","  "],
  ["comment","# as seen by highlighting here"]
],[
   ["#tmp","andOrOpt","shapeNot","shexDoc"],
  ["rcurly","}"],
  ["whiteSpace","        "],
  ["comment","# and class=hljs-title on the"]
],[
   ["#tmp","andOrOpt","shapeNot","shexDoc"],
  ["whiteSpace","         "],
  ["comment","# followingprefixed name:"]
],[
   ["nested_shapeNot","andOrOpt","shapeNot","shexDoc"],
  ["constant.library.shapeExprLabel","a:"],
  ["variable.shapeExprLabel","S1"],
  ["whiteSpace"," "],
  ["operator","@"],
  ["constant.language.shapeExprRef","<#S2>"],
  ["whiteSpace"," "],
  ["keyword","AND"],
  ["whiteSpace"," "],
  ["lparen","("],
  ["operator","@"],
  ["constant.library.shapeExprRef","a:"],
  ["variable.shapeExprRef","S3"],
  ["whiteSpace"," "],
  ["keyword","OR"]
],[
   ["#tmp","nested_andOrOpt","nested_shapeNot","andOrOpt","shapeNot","shexDoc"],
  ["whiteSpace"," "],
  ["invalid","EXTENDS"],
  ["whiteSpace"," "],
  ["operator","@"],
  ["constant.language.shapeExprRef","<#S2>"],
  ["whiteSpace"," "],
  ["invalid","EXTRA"],
  ["whiteSpace"," "],
  ["invalid","<p>"],
  ["whiteSpace"," "],
  ["invalid","a:p2"],
  ["whiteSpace"," "],
  ["invalid","CLOSED"],
  ["whiteSpace"," "],
  ["invalid","{"]
],[
   ["#tmp","nested_andOrOpt","nested_shapeNot","andOrOpt","shapeNot","shexDoc"],
  ["whiteSpace","  "],
  ["invalid","<p>"],
  ["whiteSpace"," "],
  ["invalid","@<"],
  ["comment","#S3> OR NOT {"]
],[
   ["#tmp","tripleExpression","shape","nested_nonLitNodeConstraintOpt","nested_shapeNot","andOrOpt","shapeNot","shexDoc"],
  ["whiteSpace","    "],
  ["invalid","a:p2"],
  ["whiteSpace"," "],
  ["invalid","/as\\/\\.df/"],
  ["whiteSpace"," "],
  ["keyword","OR"],
  ["whiteSpace"," "],
  ["lcurly","{"]
],[
   ["#tmp","orOpt","shape","nested_nonLitNodeConstraintOpt","nested_shapeNot","andOrOpt","shapeNot","shexDoc"],
  ["whiteSpace","      "],
  ["operator","&"],
  ["constant.language.tripleExprRef","<te1>"],
  ["whiteSpace"," "],
  ["operator",";"]
],[
   ["#tmp","nonLitNodeConstraintOpt","shapeNot","eachOneOpt","shape","nested_nonLitNodeConstraintOpt","nested_shapeNot","andOrOpt","shapeNot","shexDoc"],
  ["whiteSpace","      "],
  ["constant.library.predicate",":"],
  ["variable.predicate","p3"],
  ["whiteSpace"," "],
  ["operator","@"],
  ["constant.library.shapeExprRef",":"],
  ["variable.shapeExprRef","S3"]
],[
   ["#tmp","nested_xsFacetStar","nested_litNodeConstraint","nested_andOrOpt","nested_shapeNot","andOrOpt","shapeNot","shexDoc"],
  ["whiteSpace","    "],
  ["rcurly","}"],
  ["whiteSpace"," "],
  ["keyword","OR"],
  ["whiteSpace"," "],
  ["constant.library.datatype","xsd:"],
  ["variable.datatype","byte"],
  ["whiteSpace"," "],
  ["comment","/* OR . */"]
],[
   ["#tmp","nested_andOrOpt","nested_shapeNot","andOrOpt","shapeNot","shexDoc"],
  ["whiteSpace","  "],
  ["invalid","}"]
],[
   ["#tmp","andOrOpt","shapeNot","shexDoc"],
  ["invalid","}"],
  ["rparen",")"]
],[
   "shexDoc"
]]