<s1> {
  :p2 a:b
}

s1:		# 0-shapeExprDecl
    {		# 0-tripleExpr
  p3:   	# 1-shapeExprDecl
      {         # 1-tripleExpr
    p5:         # 2-shapeExprDecl
        .       # 2-shapeExprDecl
          ;     # 1-tripleExpr
  }		# 1-shapeExprDecl
    ;           # 0-tripleExpr
  p4:           # 1-shapeExprDecl
      .         # 1-shapeExprDecl
        ;       # 0-tripleExpr
}		# start

PREFIX : <>
# single line comment
/* multi-line
 * comment
 */

/** doc comment
 */

PREFIX #single or
/*multi-line
comments*/: #any
/**where*/<#except_here> PREFIX a: <kl>
PREFIX a.b: <ab%3Acd\u003Aef\U0000003Aghij>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
IMPORT #more
<mn>
BASE/*comments*/<op>

<S1> .
PREFIX : <>
<S2> {}
PREFIX : <>
a.b:%3Acd\$ef\# /**asdf*/ {
  <p1> ["ab\ncd\u003aef"^^xsd:string /**asdf*/ a.b:1];
  :p2 ['ab\ncd\u003aef'@en-fr];
  :p3 {
    :p5 . ;
  };
  <p4> .;
}
PREFIX : <>
<#S0ab%3Acd\u003Aef\U0000003Aghij> {
  a.b:p\=1%3a {
    # $a:te1
    <p_ab%3Acd\u003Aef\U0000003Aghij> {
      a: xsd:integer OR [1 2]
    }
  } ;
 /* }      A multi-line comment doesn't
    }      close this shape,
 */
  # }      nor does a single-line,
  : a:b  # as seen by highlighting here
}        # and class=hljs-title on the
         # followingprefixed name:
a:S1 @<#S2> AND (@a:S3 OR
 # EXTENDS @<#S2>
 EXTRA <p> a:p2 CLOSED {
  <p> @<#S3> OR NOT {
    a:p2 /as\/\.df/ OR {
      &<te1> ;
      :p3 @:S3
    } OR xsd:byte /* OR . */
  }
})
